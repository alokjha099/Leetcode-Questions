https://leetcode.com/problems/richest-customer-wealth/submissions/1667202895/



class Solution {
    public int maximumWealth(int[][] accounts) {
        int maxsum=0;
        int currsum=0;
        for (int i = 0; i < accounts.length; i++) {
            for (int j = 0; j < accounts[i].length; j++) {
                 currsum+=accounts[i][j];
            }
            if(currsum > maxsum){
                maxsum=currsum;
                
            }
            currsum=0;
        }
        return maxsum;
    }
}

// this was a simple question but the tricky part was "currsum=0;" this portion where we add the currsum inside the  if(currsum > maxsum){blocks} then
when the currsum is not greater than the maxsum it keeps the previous currsum value as it is and hence cause a test case to fail
